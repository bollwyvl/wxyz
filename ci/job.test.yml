parameters:
  platforms:
    - name: Linux
      vmImage: ubuntu-16.04
      activate: source activate
      condaPlatform: linux-64
    - name: MacOSX
      vmImage: macos-10.14
      activate: source activate
      condaPlatform: osx-64
    - name: Windows
      vmImage: vs2017-win2016
      activate: call activate
      condaPlatform: win-64
  pythons:
    - name: ThreeSix
      spec: '3.6'
      lab: '2.2'
      nodejs: '12'
      env: wxyz-test-36
    - name: ThreeSeven
      spec: '3.7'
      lab: '2.2'
      nodejs: '12'
      env: wxyz-test-37
    - name: ThreeEight
      spec: '3.8'
      lab: '2.2'
      nodejs: '14'
      env: wxyz-test-38
  env_create: conda --file ci/env-test.yml --quiet
  lab_ext: jupyter labextension install --debug --no-build $(FIRST_PARTY_LABEXTENSIONS) $(THIRD_PARTY_LABEXTENSIONS)
  lab_build: jupyter lab build --debug --dev-build=False --minimize=True

jobs:
  - ${{ each platform in parameters.platforms }}:
      - ${{ each python in parameters.pythons}}:
          - job: ${{ platform.name }}${{ python.name }}
            pool:
              vmImage: ${{ platform.vmImage }}
            steps:
              - template: steps.conda.yml
                parameters:
                  name: ${{ platform.name }}

              - script: conda create --prefix ${{ python.env }} --file ci/locks/conda.test.${{ platform.condaPlatform }}-${{ python.spec }}-${{ python.lab }}.lock
                displayName: update conda environment with test dependencies

              - script: conda info && conda list --prefix ${{ python.env }}
                displayName: list conda packages and info

              - script: ${{ platform.activate }} ./${{ python.env }} && doit setup_ts
                displayName: install npm dependencies

              - script: ${{ platform.activate }} ./${{ python.env }} && doit integrity
                displayName: check repo integrity

              - script: ${{ platform.activate }} ./${{ python.env }} && doit "dist_py*"
                displayName: build python distributions

              - script: ${{ platform.activate }} ./${{ python.env }} && doit setup_py_ci
                displayName: install python wheels

              - script: ${{ platform.activate }} ./${{ python.env }} && doit "lint_*"
                displayName: check style

              - script: ${{ platform.activate }} ./${{ python.env }} && doit nbtest
                displayName: run notebook smoke tests

              - script: ${{ platform.activate }} ./${{ python.env }} && doit ts
                displayName: build typescript

              - script: ${{ platform.activate }} ./${{ python.env }} && doit lab_extensions
                displayName: install labextensions

              - script: ${{ platform.activate }} ./${{ python.env }} && doit lab_build
                displayName: build lab

              - script: ${{ platform.activate }} ./${{ python.env }} && doit robot
                displayName: run browser tests

              - task: PublishPipelineArtifact@0
                displayName: publish browser test output
                inputs:
                  targetPath: atest/output
                  artifactName: Robot ${{ platform.name }}${{ python.name }} $(Build.BuildId)
                condition: always()
