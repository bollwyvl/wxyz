parameters:
  platforms:
    - name: Linux
      vmImage: ubuntu-16.04
      activate: source activate
      condaPlatform: linux-64
  pythons:
    - name: ThreeEight
      spec: '3.8'
      lab: '2.2'
      env: wxyz-test-38
  env_create: conda --file ci/env-test.yml --quiet
  cache_epoch: '0'

jobs:
  - ${{ each platform in parameters.platforms }}:
      - ${{ each python in parameters.pythons}}:
          - job: Lint
            pool:
              vmImage: ${{ platform.vmImage }}
            variables:
              - name: CONDA_PKGS_DIRS
                value: $(Agent.BuildDirectory)/.conda-packages/
            steps:
              - template: steps.conda.yml
                parameters:
                  name: ${{ platform.name }}

              - task: Cache@2
                inputs:
                  key: 'conda | ${{ paramters.cache_epoch }} | "$(Agent.OS)" | "${{ python.spec }}" | "${{ python.lab }}" | ci/locks/conda.test.${{ platform.condaPlatform }}-${{ python.spec }}-${{ python.lab }}.lock'
                  path: $(Agent.BuildDirectory)/.conda-packages/
                  restoreKeys: |
                    conda | ${{ paramters.cache_epoch }} | "$(Agent.OS)" | "${{ python.spec }}" | "${{ python.lab }}"
                    conda | ${{ paramters.cache_epoch }} | "$(Agent.OS)" | "${{ python.spec }}"
                displayName: cache conda packages

              - script: conda create --prefix ${{ python.env }} --file ci/locks/conda.test.${{ platform.condaPlatform }}-${{ python.spec }}-${{ python.lab }}.lock
                displayName: update conda environment with test dependencies

              - script: conda clean -yaf
                displayName: clean up after conda

              - task: Cache@2
                inputs:
                  key: 'yarn | ${{ paramters.cache_epoch }} | "$(Agent.OS)" | yarn.lock'
                  restoreKeys: |
                    yarn | ${{ paramters.cache_epoch }} | "$(Agent.OS)"
                    yarn | ${{ paramters.cache_epoch }}
                  path: .yarn-packages
                displayName: cache yarn packages

              - script: ${{ platform.activate }} ./${{ python.env }} && doit integrity
                displayName: check repo integrity

              - script: ${{ platform.activate }} ./${{ python.env }} && doit setup_py_ci
                displayName: install python wheels

              - script: ${{ platform.activate }} ./${{ python.env }} && doit -n4 "lint_*" || doit "lint_*"
                displayName: check style

              - script: ${{ platform.activate }} ./${{ python.env }} && doit hash_dist
                displayName: build dists

              - task: PublishPipelineArtifact@0
                displayName: publish artifacts for distribution
                inputs:
                  targetPath: dist
                  artifactName: Dist $(Build.BuildId)
                condition: always()
